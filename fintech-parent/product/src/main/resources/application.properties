spring.application.name=product
spring.jpa.hibernate.ddl-auto=create-drop
spring.datasource.url=jdbc:mysql://localhost:3309/product?allowPublicKeyRetrieval=true&useSSL=false&useTimezone=true&serverTimezone=UTC
spring.datasource.username=product_user
spring.datasource.password=product_password
spring.jpa.show-sql: true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver






spring.kafka.bootstrap-servers=my-cluster-kafka-bootstrap:9091,my-cluster-kafka-bootstrap:9092,my-cluster-kafka-bootstrap:9093
#spring.cloud.stream.kafka.binder.brokers=my-cluster-kafka-brokers
#spring.cloud.stream.kafka.binder.auto-add-partitions=false

#spring.cloud.stream.kafka.binder.consider-down-when-any-partition-has-no-leader=false
##spring.cloud.stream.kafka.binder.brokers=my-cluster-kafka-brokers:9092
#spring.cloud.stream.kafka.binder.brokers=9092
##spring.cloud.stream.kafka.binder.zkNodes=my-cluster-zookeeper-nodes
#spring.cloud.stream.kafka.binder.defaultZkPort=2181
#spring.kafka.brokers=zookeeper:2181
#spring.kafka.admin.auto-create=false
# spring.cloud.stream.default.group=product
spring.cloud.function.definition= handleOrderCreation
spring.cloud.stream.bindings.handleOrderCreation-in-0.destination: order-flow
##spring.cloud.stream.bindings.handleOrderCreation-in-0.consumer.
#spring.cloud.stream.kafka.binder.auto-create-topics=false
spring.cloud.stream.bindings.handleOrderCreation-in-0.group=product
#spring.cloud.stream.bindings.handleOrderCreation-in-0.content-type=application/json
spring.kafka.consumer.properties.spring.json.type.mapping=OrderCreatedEvent:com.beshara.fintech.product.domain.events.OrderCreatedEvent
#spring.cloud.stream.bindings.handleOrderCreation-in-0.consumer.value-deserializer= org.springframework.kafka.support.serializer.JsonDeserializer
#spring.kafka.consumer.key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer= org.springframework.kafka.support.serializer.JsonDeserializer
#spring.kafka.producer.key-serializer: org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
